http {
  host = "0.0.0.0"
  host = ${?HTTP_HOST}
  port = 8080
  port = ${?HTTP_PORT}
}
tcp {
  port = 2550
  port = ${?TCP_PORT}
}

akka {
  logLevel = INFO
  stdout-logLevel = INFO
  event-handlers = ["akka.event.Logging$DefaultLogger"]
  stream {
    materializer {
      subscription-timeout {
        timeout = 10s
      }
    }
  }
  http.client {
    host-connection-pool {
      max-connections = 8
      max-open-requests = 64
    }
  }
}

application {
  name = skarn-push-server
}

spray.can {
  server {
    registration-timeout = 3s
  }
  client {
    host-connector {
      max-connections = 8
    }
  }
}

push-request-queue-dispatcher {
  mailbox-type = "skarn.push.PushRequestQueueBoundedPriorityMailbox"
  mailbox-capacity = 11
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 1.0
    parallelism-max = 64
  }
}


kamon {
  metric {
    tick-interval = 1 seconds
    filters {
      akka-actor {
        includes = [ ${application.name}"/user/**" ]
        excludes = [ ${application.name}"/system/**" ]
      }
      akka-dispatcher {
        includes = [ ${application.name}"/akka.actor.default-dispatcher", ${application.name}"/push-request-queue-dispatcher" ]
      }
      trace {
        includes = [ "**" ]
        excludes = []
      }
    }
  }
  trace {
    ask-pattern-tracing = on
  }
  spray.client.instrumentation-level = request-level
  statsd {
    hostname = ${?KAMON_HOST}
    hostname = ${?KAMON_PORT}
    report-system-metrics = true
    simple-metric-key-generator {
      application = ${application.name}
    }
  }
  datadog {
    hostname = ${?KAMON_HOST}
    port = ${?KAMON_PORT}
  }
  internal-config {
    akka {

    }
    spray {

    }
  }
}
